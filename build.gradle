plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

allure{
    report {
        version.set("2.24.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.24.0")
            }
        }
    }
}

def allureVersion = "2.21.0",
    assertJVersion = "3.24.2",
    appiumJavaClientVersion = "8.3.0",
    jacksonDatabindVersion = "2.14.2",
    javaFakerVersion = "1.0.2",
    junitJupiterVersion = "5.9.2",
    ownerVersion = "1.0.12",
    restAssuredVersion = "5.3.0",
    selenideVersion = "6.19.1",
    slf4jVersion = "2.0.6"

repositories {
    mavenCentral()
}

group 'guru.qa'
version '1.0'

dependencies {
    testImplementation(
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion",
            "io.appium:java-client:$appiumJavaClientVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
task MainPageMenuTests(type: Test) {
    useJUnitPlatform {
        includeTags "ui", "mainpage"
    }
}
task ProjectTests(type: Test) {
    useJUnitPlatform {
        includeTags "ui", "prject"
    }
}
task TaskTests(type: Test) {
    useJUnitPlatform {
        includeTags "ui", "task"
    }
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}